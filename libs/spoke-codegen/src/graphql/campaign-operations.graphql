fragment CurrentAssignmentTarget on AssignmentTarget {
  type
  campaign {
    id
    title
  }
  teamTitle
  countLeft
  enabled
}

fragment CampaignInfo on Campaign {
  id
  title
  isStarted
  isApproved
  isArchived
  hasUnassignedContacts
  hasUnsentInitialMessages
  hasUnhandledMessages
  description
  dueBy
}

query GetAdminAssignmentTargets($organizationId: String!) {
  organization(id: $organizationId) {
    id
    currentAssignmentTargets {
      ...CurrentAssignmentTarget
    }
  }
}

mutation archiveCampaign($campaignId: String!) {
  archiveCampaign(id: $campaignId) {
    ...CampaignInfo
  }
}

mutation unarchiveCampaign($campaignId: String!) {
  unarchiveCampaign(id: $campaignId) {
    ...CampaignInfo
  }
}

mutation releaseMessages($campaignId: String!, $target: ReleaseActionTarget!, $ageInHours: Float) {
  releaseMessages(campaignId: $campaignId, target: $target, ageInHours: $ageInHours)
}

mutation deleteNeedsMessage($campaignId: String!) {
  deleteNeedsMessage(campaignId: $campaignId)
}

mutation markForSecondPass($campaignId: String!, $input: SecondPassInput!) {
  markForSecondPass(campaignId: $campaignId, input: $input)
}

mutation unMarkForSecondPass($campaignId: String!) {
  unMarkForSecondPass(campaignId: $campaignId)
}

mutation toggleAutoAssign($campaignId: String!, $enabled: Boolean!) {
  editCampaign(id: $campaignId, campaign: { isAutoassignEnabled: $enabled }) {
    id
    isAutoassignEnabled
  }
}
